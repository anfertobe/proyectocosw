package tserviceClases;
// Generated 21/02/2015 11:39:05 AM by Hibernate Tools 4.3.1


import java.util.Date;

import java.util.LinkedList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Persona generated by hbm2java
 */
@Entity
@Inheritance(strategy=InheritanceType.JOINED)
@Table(name="Persona")
public class Persona  implements java.io.Serializable {


     private int identificacion;
     private HojaDeVida hojaDeVida;
     private String nombre;
     private Date fechaNacimiento;
     private int hojaDeVidaId;

     private List<Direcciones> direccioneses = new LinkedList();
     private List<ExperienciaLaboral> experienciaLaborals = new LinkedList();
     private List<Correo> correos = new LinkedList();

    public Persona() {
    }

    public Persona(Persona p){
        this.correos = p.correos;
        this.direccioneses = p.direccioneses;
        this.experienciaLaborals = p.experienciaLaborals;
        this.fechaNacimiento = p.fechaNacimiento;
        this.hojaDeVida = p.hojaDeVida;
        this.hojaDeVidaId = p.hojaDeVidaId;
        this.identificacion = p.identificacion;
        this.nombre = p.nombre;
    }
	
    public Persona(int identificacion, String nombre, Date fechaNacimiento, int hojaDeVidaId) {
        this.identificacion = identificacion;
        this.nombre = nombre;
        this.fechaNacimiento = fechaNacimiento;
        this.hojaDeVidaId = hojaDeVidaId;
    }
    public Persona(int identificacion, HojaDeVida hojaDeVida, String nombre, Date fechaNacimiento, int hojaDeVidaId, List<Direcciones> direccioneses, List<ExperienciaLaboral>  experienciaLaborals, List<Correo> correos) {
       this.identificacion = identificacion;
       this.hojaDeVida = hojaDeVida;
       this.nombre = nombre;
       this.fechaNacimiento = fechaNacimiento;
       this.hojaDeVidaId = hojaDeVidaId;
      this.direccioneses = direccioneses;
       this.experienciaLaborals = experienciaLaborals;
       this.correos = correos;
    }
   
     @Id 
   
    @Column(name="Identificacion", unique=true, nullable=false)
    public int getIdentificacion() {
        return this.identificacion;
    }
    
    public void setIdentificacion(int identificacion) {
        this.identificacion = identificacion;
    }

    @OneToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="HojadeVida_Id", insertable = false, updatable = false)
    public HojaDeVida getHojaDeVida() {
        return this.hojaDeVida;
    }
    
    public void setHojaDeVida(HojaDeVida hojaDeVida) {
        this.hojaDeVida = hojaDeVida;
    }

    
    @Column(name="Nombre", nullable=false, length=45)
    public String getNombre() {
        return this.nombre;
    }
    
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="FechaNacimiento", nullable=false, length=10)
    public Date getFechaNacimiento() {
        return this.fechaNacimiento;
    }
    
    public void setFechaNacimiento(Date fechaNacimiento) {
        this.fechaNacimiento = fechaNacimiento;
    }

    
    @Column(name="HojadeVida_Id", nullable=false)
    public int getHojaDeVidaId() {
        return this.hojaDeVidaId;
    }
    
    public void setHojaDeVidaId(int hojaDeVidaId) {
        this.hojaDeVidaId = hojaDeVidaId;
    }


@OneToMany(fetch=FetchType.LAZY, mappedBy="persona")
    public List<Direcciones> getDireccioneses() {
        return this.direccioneses;
    }
    
    public void setDireccioneses(List<Direcciones> direccioneses) {
        this.direccioneses = direccioneses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="persona")
    public List<ExperienciaLaboral>  getExperienciaLaborals() {
        return this.experienciaLaborals;
    }
    
    public void setExperienciaLaborals(List<ExperienciaLaboral>  experienciaLaborals) {
        this.experienciaLaborals = experienciaLaborals;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="persona")
    public List<Correo> getCorreos() {
        return this.correos;
    }
    
    public void setCorreos(List<Correo> correos) {
        this.correos = correos;
    }




}


